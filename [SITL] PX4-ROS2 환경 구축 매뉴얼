1. ROS2 foxy 설치
$ locale  # check for UTF-8

$ sudo apt update && sudo apt install locales
$ sudo locale-gen en_US en_US.UTF-8
$ sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
$ export LANG=en_US.UTF-8

$ locale  # verify settings

$ sudo apt install software-properties-common
$ sudo add-apt-repository universe #에러 발생할 수도 있으나 무시 가능

$ sudo apt update && sudo apt install curl -y
$ sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg

$ echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null

$ sudo apt update
$ sudo apt upgrade

$ sudo apt install ros-foxy-desktop python3-argcomplete
$ sudo apt install ros-dev-tools

# Replace ".bash" with your shell if you're not using bash
# Possible values are: setup.bash, setup.sh, setup.zsh
$ source /opt/ros/foxy/setup.bash

#매번 source /opt...를 매번 입력하기 싫다면 아래와 같이 입력
echo "source /opt/ros/rolling/setup.bash" >> ~/.bashrc

#설치 확인 차 테스트 진행

#Terminal 1
$ source /opt/ros/foxy/setup.bash
$ ros2 run demo_nodes_cpp talker

#Terminal 2
$ source /opt/ros/foxy/setup.bash
$ ros2 run demo_nodes_py listener

2. Gazebo 설치 (PX4-Autopilot 설치 시 자동 설치되니 선택적 설치 바람)
$ sudo sh -c 'echo "deb
$ http://packages.osrfoundation.org/gazebo/ubuntu-stable`lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list'

$ wget https://packages.osrfoundation.org/gazebo.key -O - | sudo apt-key add -

$ sudo apt-get update
$ sudo apt-get install gazebo11
$ sudo apt install ros-foxy-gazebo-ros-pkgs


3. PX4-Autopilot 설치
$ sudo apt install git
$ git clone https://github.com/PX4/PX4-Autopilot.git --recursive
$ bash ./PX4-Autopilot/Tools/setup/ubuntu.sh
apollo@apollo:~/PX4-Autopilot$ git checkout v1.13.1
#만약 아래와 같은 에러 발생 시 이어서 진행
error: Your local changes to the following files would be overwritten by checkout:
	boards/nxp/mr-canhubk3/fmu.px4board
Please commit your changes or stash them before you switch branches.
Aborting

$ git add boards/nxp/mr-canhubk3/fmu.px4board
$ git commit -m "Committing changes before branch switch"
$ git stash
$ git checkout v1.13.1

4. Java 설치 확인
$ java -version
openjdk version "11.0.19" 2023-04-18
OpenJDK Runtime Environment (build 11.0.19+7-post-Ubuntu-0ubuntu120.04.1)
OpenJDK 64-Bit Server VM (build 11.0.19+7-post-Ubuntu-0ubuntu120.04.1, mixed mode, sharing)


5. curl 설치 (sdkman 설치 위함)
#curl는 Client URL의 약자로 다양한 네트워크 프로토콜을 사용하는 데이터 전송을 위한 라이브러리와 커맨드 라인 툴(command line tool)을 제공하는 컴퓨터 소프트웨어 프로젝트이다.
$ curl -version
$ sudo apt update && sudo apt upgrade
$ sudo apt install curl

6. sdkman 설치
# Fast-RTPS-Gen을 빌드하기 위해 Gradle을 설치해야 하는데 설치 시 sdkman으로 Gradle 설치를 권고하기 때문에 sdkman을 먼저 설치해야 한다.
# sdkman은 Software Development Kit MANager의 약자로 유닉스를 기반으로 하는 대부분의 시스템에서 여러 가지 소프트웨어 개발 키트(SDK, Software Development Kits)의 병렬 버전을 관리하기 위한 툴(tool)이다.
$ curl -s "https://get.sdkman.io" | bash
$ source "$HOME/.sdkman/bin/sdkman-init.sh
$ sdk version

7. Gradle 설치 (v6.3 필수!)
$ sdk install gradle 6.3
$ gradle -v

8. Foonathan memory 설치
# Foonathan memory는 할당기(Allocator)와 유사하지만 사용하고 쓰기 더 편한 새로운 RawAllocator 개념을 사용하는 STL(Standard Template Library) 호환 가능한 C++ 메모리 할당기(memory Allocator)이다.
$ git clone https://github.com/eProsima/foonathan_memory_vendor.git
$ cd ~/foonathan_memory_vender
$ mkdir build && cd build
$ cmake ..
$ sudo cmake --build . --target install
# 이렇게 하면 보안 통신 지원과 함께 Fast DDS가 /usr/local에 설치됩니다.

9. Fast-DDS 설치
$ wget https://github.com/eProsima/Fast-RTPS/archive/refs/tags/v2.1.0.tar.gz
$ cd microros_ws
$ tar -xf v2.1.0.tar.gz
$ cd Fast-DDS-2.1.0
$ mkdir build && cd build
$ cmake ..
$ make -j$(nproc --all)

10. Fast-RTPS-Gen 설치
apollo@apollo:~/microros_ws$ git clone --recursive https://github.com/eProsima/Fast-DDS-Gen.git -b v1.0.4 ~/Fast-RTPS-Gen
$ cd ~/Fast-RTPS-Gen/gradle/wrapper
$ distributionUrl=https\://services.gradle.org/distributions/gradle-6.8.3-bin.zip #Gradle 버전 수정
$ cd ~/microros_ws/Fast-RTPS-Gen 
$ ./gradlew assemble && sudo env "PATH=$PATH" ./gradlew install


11. ros2 workspace 만들기
# px4_ros_com과 px4_msgs에 대해 git clone 해오기
$ git clone https://github.com/PX4/px4_ros_com.git ~/px4_ros_com_ros2/src/px4_ros_com
$ git clone https://github.com/PX4/px4_msgs.git ~/px4_ros_com_ros2/src/px4_msgs
# 기타 종속성 설치해주기
$ cd ~/px4_ros_com_ros2/src/px4_ros_com/scripts
$ sudo su
# source build_ros2_workspace.bash
# sudo pip3 install -U empy pyros-genmsg setuptools
# exit

# colcon build --symlink-install 으로 빌드하기
# 만약 "colcon: command not found" 에러가 발생하면, "sudo apt install python3-colcon-common-extensions"로 colcon을 설치해준다
$ colcon build --symlink-install --event-handlers console_direct+
$ source ~/px4_ros_com_ros2/install/setup.bash
$ micrortps_agent -t UDP


12. QGC 설치
$ cd ~
$ sudo usermod -a -G dialout $USER #필자의 경우 sudo usermod -a -G dialout apollo
$ sudo apt-get remove modemmanager -y
$ sudo apt install gstreamer1.0-plugins-bad gstreamer1.0-libav gstreamer1.0-gl -y
$ sudo apt install libqt5gui5 -y
$ sudo apt install libfuse2 -y
$ sudo apt autoremove

# https://docs.qgroundcontrol.com/master/en/getting_started/download_and_install.html 페이지 접속 후 맨 하단 Download QGroundControl.AppImage. 클릭하여 다운로드 진행

$ cd ~/Download
$ chmod +x ./QGroundControl.AppImage
$ ./QGroundControl.AppImage # 정상 설치 확인

13. PX4-ROS2 SITL 실행하기

# Terminal 1 - PX4-Autopilot 폴더에서 gazebo make 하기
$ cd ~/PX4-Autopilot
$ make px4_sitl_rtps gazebo

# Terminal 2 - UDP를 전송 프로토콜로 사용하는 micrortps_agent를 시작하기
$ source ~/px4_ros_com_ros2/install/setup.bash
$ micrortps_agent -t UDP

# Terminal 3 - roslaunch로 listener 실행하기
$ source ~/px4_ros_com_ros2/install/setup.bash
$ ros2 launch px4_ros_com sensor_combined_listener.launch.py

# 즉 microRTPS_agent는 ROS2와 붙기 위해 필요하며
# microRTPS_client는 PX4와 붙기 위해 필요하다.
# 그래서 PX4로부터 얻은 uORB topic들을 microRTPS_client가 microRTPS_agent로 전달하면 ROS2가 ros2 node들로 이 topic을 보낸다.

# 끝!!

# 참고 문헌
# https://kwangpil.tistory.com/110
# https://velog.io/@yirameon/SITL-PX4-mavros-ROS2
# https://docs.qgroundcontrol.com/master/en/getting_started/download_and_install.html
# https://docs.ros.org/en/foxy/Installation/Ubuntu-Install-Debians.html#install-ros-2-packages
# https://docs.px4.io/v1.12/en/dev_setup/fast-dds-installation.html
# https://ebuah.uah.es/dspace/bitstream/handle/10017/52774/TFG_Sanchez_Chaves_2022.pdf?sequence=1&isAllowed=y
# https://zhuanlan.zhihu.com/p/520752548
# https://docs.px4.io/v1.13/en/ros/ros2_comm.html
...
